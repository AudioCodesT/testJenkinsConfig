<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>Checkout develop branch from FRT gitlab.&#13;
Push to test-gerrit.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <url>https://git.flatrocktech.com/dot-net/audiocodes-pnc.git</url>
        <credentialsId>fc312c10-918b-4b1c-9b75-2a7ec8217250</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>test-Sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H 6-23/2 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/home/centos/jenkinsslave/workspace/CloudServices/EazyBot</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>## GiT remote section in .git/config for DMZ server:
#[core]
#        repositoryformatversion = 0
#        filemode = true
#        bare = false
#        logallrefupdates = true
#[remote "origin"]
#        url = https://devops@git.flatrocktech.com/dot-net/audiocodes-pnc.git
#        fetch = +refs/heads/*:refs/remotes/origin/*
#[branch "develop"]
#        remote = origin
#        merge = refs/heads/develop
#[remote "test-gerrit"]
#        url = ssh://jenkins@test-gerrit:29418/CloudServices/EazyBot.git
#        fetch = +refs/heads/*:refs/remotes/test-gerrit/*
#
## Also used this command to store https password inside git:
# git config --global credential.helper store
#


## Track ALL remote branches --&gt; This was used when the job was scheduled.
##                               Now that the job is triggered by gerrit,
##                               the change that triggered the job is checked out
##                               to the workspace and then pushed to the remote on DMZ

## Pull from origin &amp; push to remote destination
#for br in $(git branch -r | grep -E "^\s*origin*" | grep -v HEAD | sed 's|\s*origin/||'); do
#    echo "*******************************************************************"
#    echo -e "\t\t\tPulling $br"
#    echo "*******************************************************************"
#    git reset --hard
#    git checkout origin/$br
#    git pull origin $br
#    echo "*******************************************************************"
#    echo -e "\t\t\tPushing $br"
#    echo "*******************************************************************"
#    git push --tags $remoteDest $br
#done

#git fetch origin
#git checkout master
#git pull


echo "*******************************************************************"
echo "**********    PUSH TO BRANCH  develop                **************"
git push test-gerrit HEAD:refs/heads/develop
echo "*******************************************************************"
echo -e "\n"
echo "*******************************************************************"
echo "*******           PUSH ALSO TO master  BRANCH      ****************"
git fetch
git checkout master
git pull origin master
git push test-gerrit HEAD:refs/heads/master
echo "*******************************************************************"


</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>yuvaly shukyr</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>