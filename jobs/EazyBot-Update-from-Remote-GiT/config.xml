<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Fetch Meeting Recorder full repository.&#xd;
Push full repository (mirror) to server in DMZ at APC.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>test-Sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/home/centos/jenkinsslave/workspace/CloudServices/EazyBot</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>## GiT remote section in .git/config for DMZ server:
#[core]
#        repositoryformatversion = 0
#        filemode = true
#        bare = false
#        logallrefupdates = true
#[remote &quot;origin&quot;]
#        url = https://devops@git.flatrocktech.com/dot-net/audiocodes-pnc.git
#        fetch = +refs/heads/*:refs/remotes/origin/*
#[branch &quot;develop&quot;]
#        remote = origin
#        merge = refs/heads/develop
#[remote &quot;test-gerrit&quot;]
#        url = ssh://jenkins@test-gerrit:29418/CloudServices/EazyBot.git
#        fetch = +refs/heads/*:refs/remotes/test-gerrit/*
#
## Also used this command to store https password inside git:
# git config --global credential.helper store
#


## Track ALL remote branches --&gt; This was used when the job was scheduled.
##                               Now that the job is triggered by gerrit,
##                               the change that triggered the job is checked out
##                               to the workspace and then pushed to the remote on DMZ

remoteDest=&quot;test-gerrit&quot;

## Pull from origin &amp; push to remote destination
for br in $(git branch -r | grep -E &quot;^\s*origin*&quot; | grep -v HEAD | sed &apos;s|\s*origin/||&apos;); do
    echo &quot;*******************************************************************&quot;
    echo -e &quot;\t\t\tPulling $br&quot;
    echo &quot;*******************************************************************&quot;
    git reset --hard
    git checkout origin/$br
    git pull origin $br
    echo &quot;*******************************************************************&quot;
    echo -e &quot;\t\t\tPushing $br&quot;
    echo &quot;*******************************************************************&quot;
    git push --tags $remoteDest HEAD
done

#git fetch origin
#git checkout
#git pull --rebase
#echo &quot;*******************************************************************&quot;
#git push test-gerrit
#echo &quot;*******************************************************************&quot;

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.30">
      <recipients>shukyr yuvaly</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>