<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue>7.2.204</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.3.0">
      <info>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@test-gerrit:29418/TP/TrunkPackLib</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout>
        <deleteUntrackedNestedRepositories>false</deleteUntrackedNestedRepositories>
      </hudson.plugins.git.extensions.impl.CleanBeforeCheckout>
    </extensions>
  </scm>
  <assignedNode>TrunkPackLib</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.30.5">
      <spec/>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>TP/TrunkPackLib</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/L7.20A.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel/>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames/>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>BASE64</commentTextParameterMode>
      <buildStartMessage/>
      <buildFailureMessage/>
      <buildSuccessfulMessage/>
      <buildUnstableMessage/>
      <buildNotBuiltMessage/>
      <buildUnsuccessfulFilepath/>
      <customUrl/>
      <serverName>test-gerrit</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginRefUpdatedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL/>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>set PATH=C:\Program Files\bin;%PATH%;C:\Program Files\Git\bin;C:\cygwin\bin;C:\Program Files\WinZip&#13;
cd ..&#13;
IF NOT EXIST .git (&#13;
  git -c http.sslverify=false clone -n https://test-gerrit/TP/GWApp GWApp&#13;
  mkdir .git&#13;
  FOR /d %%i IN (GWApp\.git\*) DO move %%i .git&#13;
  move GWApp\.git\* .git&#13;
  rmdir /S /Q GWApp&#13;
)&#13;
&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/PSTN/PSTN_Interface&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/TPApp/Common/Include&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/TPApp/Common/Source&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/TPApp/PerformanceMonitoring/Include/PerformanceMonitoringDef.h&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/ControlProtocols/CommonResources/Include&#13;
git checkout -f origin/%GERRIT_BRANCH% -- TrunkPackRam/TPApp/HA/Include/HAProtectedDef.h&#13;
cd %WORKSPACE%&#13;
</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>IF NOT exist "CopyLinks.sh" (&#13;
  echo Error: CopyLinks.sh doesn't exist&#13;
  exit 1;&#13;
)&#13;
&#13;
copy CopyLinks.sh c:\temp&#13;
C:\cygwin\bin\bash --login -i -c "c:/temp/CopyLinks.sh %WORKSPACE:\=/%"&#13;
&#13;
set PATH=%PATH%;C:\Program Files\Git\bin;C:\cygwin\bin;C:\Program Files\WinZip&#13;
git describe --tags &gt; tpncp-ver.txt&#13;
&#13;
echo cd %WORKSPACE:\=/%/voplibtcl/voplibext/wireShark &gt;&gt; c:\temp\tpncp-dat-execute.sh&#13;
echo cp -fp C:/cygwin/usr/local/bin/new/*.exe C:/cygwin/usr/local/bin &gt;&gt; c:\temp\tpncp-dat-execute.sh&#13;
echo ./wireShark.tcl &gt;&gt; c:\temp\tpncp-dat-execute.sh&#13;
echo cp -fp C:/cygwin/usr/local/bin/old/*.exe C:/cygwin/usr/local/bin &gt;&gt; c:\temp\tpncp-dat-execute.sh&#13;
C:\cygwin\bin\bash --login -i -c c:/temp/tpncp-dat-execute.sh&#13;
&#13;
cd voplibtcl\voplibext\wireShark&#13;
set maxbytesize=300000&#13;
FOR /F "usebackq" %%A IN ('tpncp.dat') DO set size=%%~zA&#13;
if %size% LSS %maxbytesize% (&#13;
  echo "Error: WireShark TPNTP dat PlugIn was failed, Image too small.. exit with error"&#13;
  set errorlevel=1&#13;
) ELSE (&#13;
  net use z: /DELETE&#13;
  net use z: \\netapp1\cm\CompilationResults\WireShark&#13;
  copy /Y tpncp.dat z:\_Latest\plugins&#13;
  copy /Y tpncp.dat z:\_Latest\Plugins_x64&#13;
  copy /Y ..\..\..\tpncp-ver.txt z:\_Latest\plugins&#13;
  copy /Y ..\..\..\tpncp-ver.txt z:\_Latest\Plugins_x64&#13;
  copy /Y tpncp.dat z:\_Latest_2.0.6\plugins&#13;
  copy /Y tpncp.dat z:\_Latest_2.0.6\Plugins_x64&#13;
  copy /Y ..\..\..\tpncp-ver.txt z:\_Latest_2.0.6\plugins&#13;
  copy /Y ..\..\..\tpncp-ver.txt z:\_Latest_2.0.6\Plugins_x64&#13;
  cd /D z:\_Latest&#13;
  del /F acWireShark.zip&#13;
  WZZIP -rpu acWireShark.zip&#13;
  cd /D z:\_Latest_2.0.6&#13;
  del /F acWireShark.zip&#13;
  WZZIP -rpu acWireShark.zip&#13;
)&#13;
</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>alex.rodikov</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>