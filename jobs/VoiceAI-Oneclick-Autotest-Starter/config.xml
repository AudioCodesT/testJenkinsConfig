<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>SHUTDOWN</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/1.6:refs/remotes/origin/1.6</refspec>
        <url>ssh://jenkins@test-gerrit:29418/TP/Tools/VoiceAIConnector.git</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>1.6</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>test-Sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/home/centos/jenkinsslave/workspace/VoiceAI</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>cd session-manager/test/e2e
chmod 640 id_rsa
echo "VERSION=$(git describe --tags --abbrev=0 --first-parent)" &gt; .build_version
echo "BRANCH=$(git branch -r --contains HEAD | sed 's:^.*/::')" &gt;&gt; .build_version
export PYTHONUNBUFFERED=TRUE
if [ $SHUTDOWN == true ]; then
  SHUTDOWN_FLAG=--shutdown
fi

pip3 install --user -r requirements.txt
python3 startVMs.py $SHUTDOWN_FLAG

if [ $SHUTDOWN == false ]; then
	## Need to start the slave agent on the remote slave
    curl -o jenkinsToken 'https://test-jenkins/me/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken' --data 'newTokenName=myFoo' --user jenkins:$jenkinsPass
	jenkinsUserApiToken=$(cat jenkinsToken | jq -r '.data.tokenValue')
	curl -X POST https://jenkins:$jenkinsUserApiToken@test-jenkins/computer/VoiceAI-Test-Runner-Azure/launchSlaveAgent
    
    ## Check if node is online
    offlineStatus=$(curl -X POST https://jenkins:$jenkinsUserApiToken@test-jenkins/computer/VoiceAI-Test-Runner-Azure/api/json | tac | tac | jq -r '.offline')
    temporarilyOfflineStatus=$(curl -X POST https://jenkins:$jenkinsUserApiToken@test-jenkins/computer/VoiceAI-Test-Runner-Azure/api/json | tac | tac | jq -r '.temporarilyOfflineStatus')
    [[ "$offlineStatus" || "$temporarilyOfflineStatus" ]] || (echo "Azure test node not ready!!" &amp;&amp; exit 1)
fi</command>
      <unstableReturn>1</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.logic.And" plugin="run-condition@1.3">
            <conditions>
              <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition">
                  <worstResult>
                    <name>SUCCESS</name>
                    <ordinal>0</ordinal>
                    <color>BLUE</color>
                    <completeBuild>true</completeBuild>
                  </worstResult>
                  <bestResult>
                    <name>SUCCESS</name>
                    <ordinal>0</ordinal>
                    <color>BLUE</color>
                    <completeBuild>true</completeBuild>
                  </bestResult>
                </condition>
              </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
              <org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
                <condition class="org.jenkins_ci.plugins.run_condition.logic.Not">
                  <condition class="org.jenkins_ci.plugins.run_condition.core.BooleanCondition">
                    <token>${ENV,var="SHUTDOWN"}</token>
                  </condition>
                </condition>
              </org.jenkins__ci.plugins.run__condition.logic.ConditionContainer>
            </conditions>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.FileBuildParameters>
                      <propertiesFile>session-manager/test/e2e/.build_version</propertiesFile>
                      <failTriggerOnMissing>false</failTriggerOnMissing>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                      <useMatrixChild>false</useMatrixChild>
                      <onlyExactRuns>false</onlyExactRuns>
                    </hudson.plugins.parameterizedtrigger.FileBuildParameters>
                  </configs>
                  <projects>VoiceAI-Oneclick-Autotest</projects>
                  <condition>SUCCESS</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailFastExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@2.3.0">
      <info>
        <propertiesContent>AZURE_CLIENT_ID=e32b122f-d106-4b57-b9db-bdc5dcd100d6
AZURE_TENANT=1911c65c-893b-42f9-83fa-66c1b86fdf85
AZURE_SECRET=iCej[xc6XDd6Bgn[sE_gCwSp6kRsq]F0
PNCSubscriptionId=7d282254-36d2-4aaf-8e0c-4ba3439188fe
stckMngrRGName=staging-stack-mgr
stckMngrVMName=staging-stack-mgr
PCRGName=qa-yossib
PCVMName=TestRunner
PC_USER=tester
PC_DNS=test-runner.westus2.cloudapp.azure.com</propertiesContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jenkinsPass</name>
          <value>{AQAAABAAAAAQ+8yOzm6S+Bc//1+Kbgcq+l9xZTppaScF7kT5omDxq40=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>