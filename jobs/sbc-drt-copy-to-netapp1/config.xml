<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description/>
          <defaultValue>yossim@audiocodes.com</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BOARD</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REFTARGET</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHANGES</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>true</limitOneJobWithMatchingParams>
      <paramsToUseForLimit>REFSPEC</paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>copy2netapp</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>User="$artifactory_user:$artifactory_password"
Artifactory="https://artifactory/api/storage/sbc-review/com/ac/sbc"
DOWNLOAD=$(echo $Artifactory | sed 's|api/storage/||')
#REFTARGET=`echo $REFSPEC | sed 's:refs/changes/../::; s:/:-:g'`
Target="/netapp1/CompilationResults/DRT/Firmware/$REFTARGET"

# Create the folder in netapp1, in case it wasn't done already
if ! [ -d "$Target" ]; then
  mkdir "$Target"
fi

# if file was compiled successfully but not yet deployed to artifactory, then wait 30 sec
if ! curl -ks -u $User -X GET $Artifactory/DRT/Firmware/$REFTARGET | grep -q $BOARD; then
  sleep 30
  echo Wait 30 seconds to $BOARD deploy is complete 
  if ! curl -ks -u $User -X GET $Artifactory/DRT/Firmware/$REFTARGET | grep -q $BOARD; then
    echo $BOARD is differ, copy again...
    exit 1
  fi
fi

# Go over all cmp files in the Artifactory and copy them to netapp1 ($Target)
curl -ks -u $User -X GET $Artifactory/DRT/Firmware/$REFTARGET | grep uri | grep cmp | cut -d'"' -f4 | cut -c 2- &gt; $REFTARGET.list
if [ -s "$REFTARGET.list" ]; then
   while read -r FileName
   do
     if [ -e "$Target/$FileName" ]; then continue; fi
     echo Download $FileName to netapp1
     curl -ks -u $User -X GET $DOWNLOAD/DRT/Firmware/$REFTARGET/$FileName --output "$Target/$FileName"
     #ArtSize=`curl -ks -X GET $Artifactory/DRT/Firmware/$REFTARGET/$FileName | grep size | cut -d: -f2 | cut -d'"' -f2`
     #DestSize=`wc -c &lt;$Target/$FileName`
     #if [ $ArtSize != $DestSize ]; then 
     #  echo $ArtSize--$DestSize: $file is differ, copy again...
     #  rm -f $Target/$FileName
     #  exit 1
     #fi
   done &lt; "$REFTARGET.list"
fi

# Don't execute the next job in case you don't found 5 files
if [ `ls $Target/*.cmp | wc -l` != 5 ]; then echo "Missing files, exiting job"; exit 2; fi

# Check if sbc-drt-request job is in the queue or already running
# to avoid more than one sbc-drt-request execution 
for job in \
  $(curl -ks -u compile:$compile_password https://test-jenkins/queue/api/json | \
  sed -e 's/GERRIT_REFSPEC/\n/g' | grep sbc-drt-request); do
  if echo $job | grep -q $REFSPEC; then
    echo "DRT was executed and waiting in the queue"; 
    exit 2
  fi
done

# sbc-drt-request is running Already?
allRunning=$(curl -ks -u compile:$compile_password "https://test-jenkins/computer/api/json?tree=computer\[executors\[currentExecutable\[url\]\],\
oneOffExecutors\[currentExecutable\[url\]\]\]" | \
sed -e 's/"url":"/\n/g' | sed 's/"}}.*//g' | tail -n +2 | grep drt)

for job in $(echo $allRunning | sed 's: :\n:g' | grep sbc-drt-request); do
  if curl -ks "${job}api/json?tree=actions\[parameters\[value\]\]" | grep -q $REFSPEC; then
    echo "DRT was executed already, job $job"; 
    exit 2
  fi
done

# Check the checksum of the 5 cmp files before executing the DRT itself
for f in $Target/*.cmp; do
  checkSum1=$(curl -ks -u $User -X GET \
            $Artifactory/DRT/Firmware/$REFTARGET/$(basename $f) | \
            grep md5 | head -1 | cut -d\" -f4)
  checkSum2=$(md5sum $f | cut -d" " -f1)
  if [ $checkSum1 != $checkSum2 ]; then
    # sbc-drt-build is running now?
    for job in $(echo $allRunning | sed 's: :\n:g' | grep sbc-drt-build); do
      if curl -ks "${job}api/json?tree=actions\[parameters\[value\]\]" | grep -q $REFSPEC; then
        echo "sbc-drt-build is running now, job $job, the files are not ready yet"; 
        exit 2
      fi
    done

    echo Abort - the CheckSum of $(basename $f) is differ, copy again
    rm -f $f
    exit 1
  fi
done
</command>
      <unstableReturn>2</unstableReturn>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Run" plugin="run-condition@1.3"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.3">
        <worstResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </worstResult>
        <bestResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </bestResult>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>echo "Send a message regarding the compilation was comlete"
exit 0
revisions=$(echo $REFSPEC | cut -d/ -f4,5 | sed 's:/:/revisions/:')
curl -kns --anyauth -X POST https://test-gerrit/a/changes/$revisions/review \
-d "{\"message\": \"DRT Compilation was complete, Sent to DRT system https://test-jenkins/view/SBC-GWApp/job/sbc-drt-request\",\"notify\": \"NONE\", \"tag\": \"DRT\"}" \
-H 'Content-Type: application/json' &gt; /dev/null</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.3">
            <worstResult>
              <name>ABORTED</name>
              <ordinal>4</ordinal>
              <color>ABORTED</color>
              <completeBuild>false</completeBuild>
            </worstResult>
            <bestResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.5.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>NOT_BUILT</string>
                      <string>ABORTED</string>
                      <string>FAILURE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>
# They are sbc-drt-build that running now?
echo "Check if they are sbc-drt-build that running now"
for job in $(curl -ks -u compile:$compile_password "https://test-jenkins/computer/api/json?tree=computer\[executors\[currentExecutable\[url\]\],\
oneOffExecutors\[currentExecutable\[url\]\]\]" | \
sed -e 's/"url":"/\n/g' | sed 's/"}}.*//g' | tail -n +2 | grep sbc-drt-build); do
   if curl -ks "${job}api/json?tree=actions\[parameters\[value\]\]" | grep -q $REFSPEC; then
    echo "Not the last execution, $job is in build processing - exit without message"
    exit 1
   fi
done

# Or sbc-drt-copy-to-netapp1 in the queue?
echo "Check if they are sbc-drt-copy-to-netapp1 in the queue"
for job in \
  $(curl -ks -u compile:$compile_password https://test-jenkins/queue/api/json | \
  sed -e 's/GERRIT_REFSPEC/\n/g' | grep sbc-drt); do
  if echo $job | grep -q $REFSPEC; then
    echo "Not the last execution, $job is in the queue - exit without message"; 
    exit 1
  fi
done

echo "It is the last copy job, send a message to the user"
revisions=$(echo $REFSPEC | cut -d/ -f4,5 | sed 's:/:/revisions/:')
curl -kns --anyauth -X POST https://test-gerrit/a/changes/$revisions/review \
-d "{\"message\": \"There was a problem to copy compilation results to netapp1 storage, please press DRT again later\",\"notify\": \"OWNER\", \"tag\": \"DRT\"}" \
-H 'Content-Type: application/json' &gt; /dev/null
</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.61">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList>yossim Shuky.Riechard</recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders/>
            <attachmentsPattern/>
            <attachBuildLog>true</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=${REFSPEC}
GERRIT_BRANCH=${GERRIT_BRANCH}
EMAIL=${EMAIL}
REFTARGET=${REFTARGET}
CHANGES=${CHANGES}</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>sbc-drt-request</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>is differ, copy again</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>5</delay>
      </delay>
      <maxSchedule>1</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>1200</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <EnvInjectBuildWrapper plugin="envinject@2.3.0">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQC9Q9eeTsh0/7+AtlIDNhOldFHEwRntJsY/b1oiztPUQ=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>compile_password</name>
          <value>{AQAAABAAAAAQSpKoLe26uUGlU1Z7QY4KZZewiddRNxgGNjekiUK1KvU=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.0.3">
      <template>#${BUILD_NUMBER}__${REFSPEC}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>