<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@2.38">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.6.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.6.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableResumeJobProperty/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NEW_TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OLD_TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DeployISO</name>
          <description>official_iso
latest_iso</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.78">
    <script>pipeline {
    agent {
        node {
            label 'ems-build'
            customWorkspace '/jenkins/workspace'
        }
    }
    parameters {
        string(name: 'NEW_TAG', defaultValue: '')
        string(name: 'OLD_TAG', defaultValue: '')
        choice(name: 'DeployDVD', choices: ['official_iso', 'latest_iso'], defaultValue: 'official_iso')
        string(name: 'MASTER_IP', defaultValue: '')
        string(name: 'VQ_IP', defaultValue: '')
        string(name: 'PM_IP', defaultValue: '')
    }
    stages {
        parallel {
            stage('Install master') {
                steps {
                    build job: 'Install-DVD', parameters: [
                        string(name: 'TAG', value: "${OLD_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'master', description: 'master'),
                        string(name: 'ServerIP', value: "${MASTER_IP}", description: 'master IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                    build job: 'Install-DVD', parameters: [
                        string(name: 'TAG', value: "${NEW_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'master', description: 'master'),
                        string(name: 'ServerIP', value: "${MASTER_IP}", description: 'master IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                }
            }
            stage('Install VQ') {
                steps {
                    build job: 'Install-DVD', parameters: [
                        tring(name: 'TAG', value: "${OLD_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'VQ', description: 'VQ'),
                        string(name: 'ServerIP', value: "${VQ_IP}", description: 'VQ IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                    build job: 'Install-DVD', parameters: [
                        tring(name: 'TAG', value: "${NEW_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'VQ', description: 'VQ'),
                        string(name: 'ServerIP', value: "${VQ_IP}", description: 'VQ IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                }
            }
            stage('Install PM') {
                steps {
                    build job: 'Install-DVD', parameters: [
                        tring(name: 'TAG', value: "${OLD_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'PM', description: 'PM'),
                        string(name: 'ServerIP', value: "${PM_IP}", description: 'PM IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                    build job: 'Install-DVD', parameters: [
                        tring(name: 'TAG', value: "${NEW_TAG}", description: 'Tag'),
                        string(name: 'ServerRole', value: 'PM', description: 'PM'),
                        string(name: 'ServerIP', value: "${PM_IP}", description: 'PM IP'),
                        string(name: 'DeployDVD', value: "${DeployDVD}", description: 'DVD DeployDVD')
                    ]
                }
            }
        }
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>