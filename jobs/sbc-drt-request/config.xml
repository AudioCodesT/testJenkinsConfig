<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>trigger:&#xd;
developer clicks gerrit UI button &quot;DRT&quot;&#xd;
actions:&#xd;
1. build all boards in &quot;boards2DRT.yml&quot;&#xd;
2. deploy results to artifactory/sbc-review&#xd;
2. download and share all results to \\netapp1 folder&#xd;
3. send DRT request with major version and folder location&#xd;
4. return the vote to gerrit label &quot;QA&quot;&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>50</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description></description>
          <defaultValue>yossim@audiocodes.com</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REFTARGET</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHANGES</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>18</maxConcurrentPerNode>
      <maxConcurrentTotal>18</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>true</limitOneJobWithMatchingParams>
      <paramsToUseForLimit>REFSPEC</paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>test-Sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># send DRT request and keep the serial number from the response:
#&quot;BatchId: batchName_636159240296404766_BTR&quot;
#REFTARGET=`echo $REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`
Change=`echo $REFTARGET | sed &apos;s:-\|\.:_:g&apos;`
echo -n &quot;https://test-artifactory/webapp/#/artifacts/browse/tree/General/sbc-review/com/ac/sbc/DRT/Firmware/$REFTARGET&quot; &gt; artifactory.url

# Can run with major version only: 7.2.150, 7.2.170
GERRIT_BRANCH=$(echo $GERRIT_BRANCH | sed &apos;s:_.*::&apos;)
GERRIT_BRANCH=$(echo $GERRIT_BRANCH | sed &apos;s:.$:0:; s:\.160:\.150:&apos;)

#batchID=&quot;$(curl -s &quot;http://BatchRunner/AnonymousUser/RunDrtBatch.aspx?ModeType=SBC&amp;CompilationFolder=\\\\netapp1\\cm\\CompilationResults\\DRT\\Firmware\\$REFTARGET&amp;RunByUserEmail=$EMAIL&amp;MajorVersion=$GERRIT_BRANCH&quot; --user qasa:cpelab --ntlm | grep lblBatchIdValue | sed &apos;s/.*Black.&gt;//&apos; | sed &apos;s/&lt;.font&gt;.*//&apos;)&quot;
Output=$(curl -s &quot;http://BatchRunner/AnonymousUser/RunDrtBatch.aspx?ModeType=SBC&amp;CompilationFolder=\\\\netapp1\\cm\\CompilationResults\\DRT\\Firmware\\$REFTARGET&amp;RunByUserEmail=$EMAIL&amp;MajorVersion=$GERRIT_BRANCH&amp;GerritChange=$Change&quot; --user qasa:cpelab --ntlm | grep -E &apos;span|class&apos;)
batchID=`echo $Output | sed &apos;s:.*lblBatchIdValue&quot;&gt;&lt;b&gt;&lt;font color=&quot;Black&quot;&gt;::; s:&lt;/font.*::&apos;`
LinkToPage=`echo $Output | sed &apos;s:.*lblBatchDetailsPathValue&quot;&gt;&lt;b&gt;&lt;font color=&quot;Black&quot;&gt;::; s:&lt;/font.*::; s:\\\\:/:g&apos;`

echo LinkToPage=${LinkToPage} &gt; generated_drt.properties
echo batchID=${batchID} &gt;&gt; generated_drt.properties
echo url=&quot;https://test-artifactory/webapp/#/artifacts/browse/tree/General/sbc-review/com/ac/sbc/DRT/Firmware/$REFTARGET&quot; &gt;&gt; generated_drt.properties

if [ &quot;$LinkToPage&quot; == &quot;&quot; ]; then
  echo $Output | grep &apos;BatchRunner Is Down&apos;
  echo &quot;No Batch ID... exit with error&quot;
  echo Output=&quot;No Batch ID&quot; &gt;&gt; generated_drt.properties
  exit 1;
fi

if [[ $Output =~ &quot;Down For Maintenance&quot; ]]; then
  echo &quot;BatchRunner Is Down For Maintenance... exit with error&quot;
  echo Output=&quot;BatchRunner Is Down For Maintenance&quot; &gt;&gt; generated_drt.properties
  exit 1;
fi

echo Output=&quot;Execution error&quot; &gt;&gt; generated_drt.properties

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>generated_drt.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/env ruby

require &apos;json&apos;
require &apos;uri&apos;

if ENV[&apos;REFSPEC&apos;].to_s =~ %r{refs/changes/\d\d/(\d+)/(\d+)$}
  change=$1
  ps=$2
else
  puts &apos;Invalid refspec&apos;
  exit 0
end

data = {
  message: &apos;DRT request was sent &apos; + ENV[&apos;BUILD_URL&apos;] + &quot;\n\nDRT status: &quot; + ENV[&apos;LinkToPage&apos;],
  notify: &apos;NONE&apos;,
  tag: &apos;autogenerated:drt&apos;,
}

require &apos;pp&apos;
pp data

system(&quot;curl -kn --anyauth -X POST https://test-gerrit/a/changes/#{change}/revisions/#{ps}/review &quot; +
       &quot;-d &apos;#{data.to_json}&apos; -H &apos;Content-Type: application/json&apos;&quot;)
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># check DRT status
# &quot;BatchId: DRT_7_2_150_636450404622178009_59399_1_BTR Status: Passed&quot;
# Status options: 
#    1) Passed 2) Failed. 3) UserRequest. 4) WaitingForStations. 5) ConfiguringStations.
#    6) Running. 7) Pending. 8) WaitingForStop. 9) Stopped.
count=0

for i in {1..5000}
do
  Status=&quot;$(curl -s &quot;http://BatchRunner/AnonymousUser/GetDrtBatchStatus.aspx?BtrId=$batchID&quot; --user qasa:cpelab --ntlm | grep lblStatusValue | sed &apos;s/.*Black.&gt;//; s/&lt;.font&gt;.*//&apos;)&quot;
  [ &quot;$Status&quot; == &quot;Passed&quot; ] &amp;&amp; exit 0
  [ &quot;$Status&quot; == &quot;Failed&quot; -o &quot;$Status&quot; == &quot;WaitingForStop&quot; -o &quot;$Status&quot; == &quot;Stopped&quot; ] &amp;&amp; exit 1
  [ &quot;$Status&quot; == &quot;&quot; ] &amp;&amp; count=$((count+1))
  [ $count -eq 50 ] &amp;&amp; exit 1
  sleep 300s
done

echo Exit the while after some days
curl -s &quot;http://BatchRunner/AnonymousUser/StopDrtBatch.aspx?BtrId=$batchID&quot; --user qasa:cpelab --ntlm
exit 1</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
            <worstResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </worstResult>
            <bestResult>
              <name>SUCCESS</name>
              <ordinal>0</ordinal>
              <color>BLUE</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.5.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                      <string>NOT_BUILT</string>
                      <string>FAILURE</string>
                      <string>UNSTABLE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <EnvInjectBuilder plugin="envinject@2.1.5">
                        <info>
                          <propertiesFilePath>generated_drt.properties</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>for rep in $CHANGES; do

  change=`echo $rep | cut -d/ -f1`
  ps=`echo $rep | cut -d/ -f2`

  #change=`echo $REFSPEC | cut -d/ -f4`
  #ps=`echo $REFSPEC | cut -d/ -f5`
  RunPhases=1
  checkPS=$ps

#Check if they are not a new PS - if yes, check if the code was changed
#In case the code was not changed, give the score to the last PS - should be store in the checkPS variable. 
  ssh -p 29418  -i ~/.ssh/id_rsa_jenkins jenkins@test-gerrit gerrit query --patch-sets $change | grep  &apos;kind:\|number:&apos; | tail -n +2 | sed &apos;s/ //g&apos; &gt; /tmp/$change.txt
# $field Could be: number or kind
# $kind could be: REWORK, TRIVIAL_REBASE, MERGE_FIRST_PARENT_UPDATE, NO_CODE_CHANGE or NO_CHANGE
  while IFS=: read -r field value; do   
    if [ &quot;$field&quot; == &quot;number&quot; ]; then checkPS=$value;
    else
      echo Check PS $checkPS: $value;
      if [[ &quot;$checkPS&quot; -gt &quot;$ps&quot; &amp;&amp; &quot;$value&quot; == &quot;REWORK&quot; ]]; then
        RunPhases=0
    fi; fi
  done &lt; /tmp/$change.txt

  if [[ &quot;$RunPhases&quot; -eq 1 ]]; then ps=$checkPS; fi

  echo Send OK message to Gerrit - $change,$ps
  ssh -p 29418  -i ~/.ssh/id_rsa_jenkins jenkins@test-gerrit gerrit review \
  --message &quot;&apos;DRT Passed successfully - $BUILD_URL \
      CMP files: $url \
      DRT results: $LinkToPage&apos;&quot; \
  --notify OWNER \
  --label DRT=1 \
  --tag &quot;&apos;autogenerated:drt&apos;&quot; \
  $change,$ps

done</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.5.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>FAILURE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <EnvInjectBuilder plugin="envinject@2.1.5">
                        <info>
                          <propertiesFilePath>generated_drt.properties</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                      <hudson.tasks.Shell>
                        <command>for rep in $CHANGES; do

  change=`echo $rep | cut -d/ -f1`
  ps=`echo $rep | cut -d/ -f2`

  echo Send failed message to Gerrit - $change,$ps
  ssh -p 29418  -i ~/.ssh/id_rsa_jenkins jenkins@test-gerrit gerrit review \
  --message &quot;&apos;DRT Failed - $BUILD_URL \
      CMP files: $url \
      Error message: $Output \
      DRT results: $LinkToPage&apos;&quot; \
  --notify OWNER \
  --label DRT=-1 \
  --tag &quot;&apos;autogenerated:drt&apos;&quot; \
  $change,$ps

done      
</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
            <worstResult>
              <name>ABORTED</name>
              <ordinal>4</ordinal>
              <color>ABORTED</color>
              <completeBuild>false</completeBuild>
            </worstResult>
            <bestResult>
              <name>ABORTED</name>
              <ordinal>4</ordinal>
              <color>ABORTED</color>
              <completeBuild>false</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.5.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                      <string>NOT_BUILT</string>
                      <string>ABORTED</string>
                      <string>FAILURE</string>
                      <string>UNSTABLE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>echo ----------------- Stop it after it was aborted --------------------
curl -s &quot;http://BatchRunner/AnonymousUser/StopDrtBatch.aspx?BtrId=$batchID&quot; --user qasa:cpelab --ntlm
echo ----------------- Done ------------------------

for rep in $CHANGES; do

  change=`echo $rep | cut -d/ -f1`
  ps=`echo $rep | cut -d/ -f2`

  ssh -p 29418  -i ~/.ssh/id_rsa_jenkins jenkins@test-gerrit gerrit review \
  --message &quot;&apos;DRT was aborted&apos;&quot; \
  --notify OWNER \
  --tag &quot;&apos;autogenerated:drt&apos;&quot; \
  $change,$ps

done
</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>BatchRunner Is Down For Maintenance</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>1800</delay>
      </delay>
      <maxSchedule>1</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} ${REFSPEC}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>