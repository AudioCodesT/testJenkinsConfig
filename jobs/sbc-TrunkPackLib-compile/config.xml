<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue>7.2.200</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesContent>PATH=C:/Program Files/bin:$PATH</propertiesContent>
        <secureGroovyScript plugin="script-security@1.42">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.8.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@test-gerrit:29418/TP/TrunkPackLib</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${GERRIT_REFNAME}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser" plugin="gerrit-trigger@2.27.5">
          <separator>#</separator>
        </buildChooser>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
    </extensions>
  </scm>
  <assignedNode>TrunkPackLib</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.27.5">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>TP/TrunkPackLib</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/L7.20A.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames></dependencyJobsNames>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>PLAIN</commentTextParameterMode>
      <buildStartMessage>gerrit review &lt;CHANGE&gt;,&lt;PATCHSET&gt; --message &apos;Build Started &lt;BUILDS_STATS&gt;&apos; --notify=NONE</buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl></customUrl>
      <serverName>test-gerrit</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginRefUpdatedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>set PATH=%PATH%;C:\Program Files\Git\bin;C:\cygwin\bin;C:\Program Files\WinZip&#xd;
cd ..&#xd;
IF NOT EXIST .git (&#xd;
  git -c http.sslverify=false clone -n https://test-gerrit/TP/GWApp GWApp&#xd;
  mkdir .git&#xd;
  FOR /d %%i IN (GWApp\.git\*) DO move %%i .git&#xd;
  move GWApp\.git\* .git&#xd;
  rmdir /S /Q GWApp&#xd;
)&#xd;
&#xd;
@set TPFILES=TrunkPackRam/PSTN/PSTN_Interface&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/Transmission/TransmInterface&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/TPApp/Common/Include&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/TPApp/Common/Source&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/TPApp/PerformanceMonitoring/Include/PerformanceMonitoringDef.h&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/ControlProtocols/CommonResources/Include&#xd;
@set TPFILES=%TPFILES% TrunkPackRam/TPApp/HA/Include/HAProtectedDef.h&#xd;
@echo Checking out TrunkPackRam linked files&#xd;
git -c http.sslverify=false fetch&#xd;
git checkout -f origin/7.2.202 -- %TPFILES%&#xd;
cd %WORKSPACE%&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>IF NOT exist &quot;CopyLinks.sh&quot; (&#xd;
  echo Error: CopyLinks.sh doesn&apos;t exist&#xd;
  exit 1;&#xd;
)&#xd;
&#xd;
copy CopyLinks.sh c:\temp&#xd;
C:\cygwin\bin\bash --login -i -c &quot;c:/temp/CopyLinks.sh %WORKSPACE:\=/%&quot;&#xd;
&#xd;
set PATH=%PATH%;C:\Program Files\Git\bin;C:\cygwin\bin;C:\Program Files\WinZip&#xd;
git describe --tags &gt; TAG.txt&#xd;
set /P BL=&lt;TAG.txt&#xd;
echo COMP_VER=%BL% &gt; generated_version.properties&#xd;
git branch --no-color -r --contains HEAD | head -1 | cut -d/ -f2 &gt; GIT_BRANCH.txt&#xd;
set /P GIT_BRANCH=&lt;GIT_BRANCH.txt&#xd;
echo GIT_BRANCH=%GIT_BRANCH% &gt;&gt; generated_version.properties&#xd;
&#xd;
rem ------------ build all LIB ---------------&#xd;
echo cd %WORKSPACE:\=/% &gt; c:\temp\BuildHost.sh&#xd;
echo Minor=`echo %BL% ^| cut -d. -f3` &gt;&gt; c:\temp\BuildHost.sh&#xd;
echo sed -e &quot;s/#define ACL_API_MINOR_VERSION.*/#define ACL_API_MINOR_VERSION $Minor/&quot; VoPLib/include/VoIPver.h ^&gt; VoIPver.h &gt;&gt; c:\temp\BuildHost.sh&#xd;
echo cp -f VoIPver.h VoPLib/include/VoIPver.h &gt;&gt; c:\temp\BuildHost.sh&#xd;
echo ./Build_Host_Compilation %BL% 722 &gt;&gt; c:\temp\BuildHost.sh&#xd;
C:\cygwin\bin\bash --login -i -c c:/temp/BuildHost.sh || exit 1&#xd;
&#xd;
rem ------------ build tpncp.dat ---------------&#xd;
echo cd %WORKSPACE:\=/%/voplibtcl/voplibext/wireShark &gt; c:\temp\ExecTpncp.sh&#xd;
echo cp -fp C:/cygwin/usr/local/bin/new/*.exe C:/cygwin/usr/local/bin &gt;&gt; c:\temp\ExecTpncp.sh&#xd;
echo ./wireShark.tcl Release &gt;&gt; c:\temp\ExecTpncp.sh&#xd;
echo cp -fp C:/cygwin/usr/local/bin/old/*.exe C:/cygwin/usr/local/bin &gt;&gt; c:\temp\ExecTpncp.sh&#xd;
C:\cygwin\bin\bash --login -i -c c:/temp/ExecTpncp.sh || exit 1&#xd;
&#xd;
cd voplibtcl\voplibext\wireShark&#xd;
set maxbytesize=300000&#xd;
FOR /F &quot;usebackq&quot; %%A IN (&apos;tpncp.dat&apos;) DO set size=%%~zA&#xd;
if %size% LSS %maxbytesize% (&#xd;
  echo &quot;Error: WireShark TPNTP dat PlugIn was failed, Image too small.. exit with error&quot;&#xd;
  set errorlevel=1&#xd;
) ELSE (&#xd;
  mkdir c:\temp\%BL%\Utilities\WiresharkPlugins\shared&#xd;
  copy tpncp.dat c:\temp\%BL%\Utilities\WiresharkPlugins\shared&#xd;
  WZZIP -rp ..\..\..\tpncp_dat.zip tpncp.dat 2&gt; NUL&#xd;
)&#xd;
&#xd;
cd ..\..\..&#xd;
WZZIP -rp lib.zip c:\temp\%BL% &gt; NUL 2&gt;&amp;1&#xd;
&#xd;
set MAIN_GIT_BRANCH=%GIT_BRANCH:~0,-1%0&#xd;
&#xd;
net use y: /DELETE&#xd;
net use y: &quot;\\netapp1\cm\CompilationResults\%MAIN_GIT_BRANCH% Release&quot;&#xd;
mkdir y:\Lib\%BL%&#xd;
copy /Y lib.zip y:\Lib\%BL%&#xd;
mkdir y:\TCL\%BL%&#xd;
copy /Y voplibtcl\voplibext\voplibcon\* y:\TCL\%BL%&#xd;
</command>
    </hudson.tasks.BatchFile>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>generated_version.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>alex.rodikov</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.15.0">
      <deployerDetails>
        <artifactoryName>artifactory-pro</artifactoryName>
        <artifactoryUrl>https://test-artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>sbc-release</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>artifactory-pro</artifactoryName>
        <artifactoryUrl>https://test-artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>false</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/lib.zip=&gt;com/ac/sbc/$GIT_BRANCH/Lib/${COMP_VER}
${WORKSPACE}/tpncp_dat.zip=&gt;com/ac/sbc/WireShark/TPNCP_dat/${COMP_VER}</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>true</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
  </buildWrappers>
</project>