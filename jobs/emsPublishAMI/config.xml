<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NEW_TAG</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ems-build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#profileName=&quot;devAccount&quot;
#cat &lt;&lt;-EOF &gt;&gt; ~/.aws/config
#[profile ${profileName}]
#region = eu-central-1
#output = text
#EOF
#cat &lt;&lt;-EOF &gt;&gt; ~/.aws/credentials 
#[${profileName}]
#aws_access_key_id = ${awsAccessKeyId}
#aws_secret_access_key = ${awsSecretAccessKey}
#EOF
#switch user
#eb init --profile ${profileName}

echo &quot;Regions And ids List&quot; &gt; RegionsNameAndIds.txt
echo -e &quot;\r\n&quot; &gt;&gt; RegionsNameAndIds.txt
#list of other regions
OTHER_REGIONS=&quot;us-west-2 us-west-1 us-east-1 eu-west-1 ap-southeast-1&quot;
OTHER_REGIONS=($OTHER_REGIONS) 
currentRegion=&quot;eu-central-1&quot;
ImageName=ovocAMI_${NEW_TAG}

#Get Image Id
ImageId=$(aws ec2 describe-images --filters Name=name,Values=$ImageName --output text --query &apos;Images[*].ImageId&apos;)

echo &quot;Region Name: $currentRegion ,&quot; &gt;&gt; RegionsNameAndIds.txt
echo &quot;Region id: $ImageId&quot; &gt;&gt; RegionsNameAndIds.txt
echo -e &quot;\r\n&quot; &gt;&gt; RegionsNameAndIds.txt
#make The Image Public
aws ec2 modify-image-attribute --image-id ${ImageId} --launch-permission &quot;{\&quot;Add\&quot;:[{\&quot;Group\&quot;:\&quot;all\&quot;}]}&quot;
#copy Image to other Regions
for destRegionName in $OTHER_REGIONS
do
	
    	newRegionAmiId=$(aws ec2 copy-image --region ${destRegionName} --name &quot;ovocAmi_${NEW_TAG}&quot; --description &quot;ovoc AMI ${NEW_TAG}&quot; --source-image-id ${ImageId} --source-region ${currentRegion} --output text --query &quot;ImageId&quot;)
        
        sleep 20
        wait for The image to Create
        OLD_STATE=&quot;&quot;
        while true; do
            sleep 100
            STATE=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${newRegionAmiId} --output text --query &quot;Images[0].State&quot;)
            if [[ $STATE != $OLD_STATE ]]; then
                echo $STATE
                OLD_STATE=$STATE
            fi
            if [[ $STATE == &quot;available&quot; ]]; then
                break
            fi
        done
        
        #get Snapshot id    
        snapshotId=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${newRegionAmiId} --output text --query Images[*].BlockDeviceMappings[*].Ebs.SnapshotId)
        #give name to the snapshot 
        aws ec2 create-tags --resources $snapshotId --tags Key=Name,Value=OvocAMI_${NEW_TAG}
        # add public permissions to the rest of the regions
        aws ec2 modify-image-attribute --region ${destRegionName} --image-id ${newRegionAmiId} --launch-permission &quot;{\&quot;Add\&quot;:[{\&quot;Group\&quot;:\&quot;all\&quot;}]}&quot;
        echo &quot;Region Name: $destRegionName ,&quot; &gt;&gt; RegionsNameAndIds.txt
        echo &quot;Region id: $newRegionAmiId&quot; &gt;&gt; RegionsNameAndIds.txt
      	echo -e &quot;\r\n&quot; &gt;&gt; RegionsNameAndIds.txt
    
done

echo &quot;Region Name &amp; Id&quot;
cat RegionsNameAndIds.txt

 </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>RegionsNameAndIds.txt</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>ben.magriso@audiocodes.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>