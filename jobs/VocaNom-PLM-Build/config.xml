<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Manual trigger.&#xd;
1. Create Tag.&#xd;
2. Build PLM.&#xd;
3. Upload outputs to artifactory.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description>Branch to build</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NEWTAG</name>
          <description>Specific tag to build.
If empty will increment last tag on gerrit.</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/${BRANCH}:refs/remotes/origin/${BRANCH}</refspec>
        <url>ssh://jenkins@test-gerrit:29418/VocaNom/PLM.git</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <assignedNode>VocaNOM</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>C:\jenkinsslave\workspace\VocaNom\PLM</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!C:\Program Files\Git\bin\bash.exe -login

COMMSHA1=$(git log -1 --oneline | gawk &apos;{print $1}&apos;)

## If no tag specified for build, get last tag from test-gerrit and increment it by 1 to set new version and new tag
## Else use given tag as new tag and also make new version from it.
## The version value has two forms:
## x,x,x,x which is reprsented by *_VER
## &quot;x, x, x, x&quot; which is represented by *_V_E_R
if [ -z &quot;$NEWTAG&quot; ]; then
    Tags=$(git describe --tags --abbrev=0 --first-parent origin/${BRANCH} 2&gt;/dev/null)
    if [[ &quot;$Tags&quot; != &quot;&quot; ]]; then
        LASTTAG=$(git tag --points-at $(git rev-list -n1 $Tags) --sort=-taggerdate | head -1)
    else
        LASTTAG=&quot;0.0.0.0&quot;
    fi
    
    echo $LASTTAG
    
    # Disassemble tag
    LASTMAJ=$(echo $LASTTAG | gawk -F. &apos;{print $1}&apos;)
    LASTMID=$(echo $LASTTAG | gawk -F. &apos;{print $2}&apos;)
    LASTMIN=$(echo $LASTTAG | gawk -F. &apos;{print $3}&apos;)
    LASTPCH=$(echo $LASTTAG | gawk -F. &apos;{print $4}&apos;)
    
    # Increment last field
    NEW_PCH=$((LASTPCH+1))
    
    # Construct new values
    NEWTAG=&quot;$LASTMAJ.$LASTMID.$LASTMIN.$NEW_PCH&quot;
    NEW_VER=&quot;$LASTMAJ,$LASTMID,$LASTMIN,$NEW_PCH&quot;
    NEW_V_E_R=&quot;$LASTMAJ, $LASTMID, $LASTMIN, $NEW_PCH&quot;
    
    TAGMSG=&quot;Tagged commit $COMMSHA1 with tag $NEWTAG incremented from last tag in git&quot;
else
    # Construct new values
    NEW_VER=$(echo $NEWTAG | sed &apos;s/\.\,/g&apos;)
    NEW_V_E_R=$(echo $NEWTAG | sed &apos;s/\.\, /g&apos;)
    
    TAGMSG=&quot;Tagged commit $COMMSHA1 with tag $NEWTAG provided by user&quot;
fi

## Tag current commit with NEWTAG
git tag -a -m &quot;$TAGMSG&quot; $NEWTAG
git push origin $NEWTAG

## Embed new version inside c# assembly file.
## For easy reading, this was split into two commands.
cd PhoneListManager
sed -E -i &apos;s:^( *FILEVERSION| *PRODUCTVERSION).*$:\1 &apos;&quot;$NEW_VER&quot;&apos;:g&apos; PhoneListManager.rc
sed -E -i &apos;s:^( *VALUE &quot;FileVersion&quot;,| *VALUE &quot;ProductVersion&quot;,).*$:\1 \&quot;&apos;&quot;$NEW_V_E_R&quot;&apos;\&quot;:g&apos; PhoneListManager.rc
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.BatchFile>
      <command>cd PhoneListManager&#xd;
%comspec% /k go.bat&#xd;
</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.5.0">
      <deployerDetails>
        <artifactoryName>artifactory2-pro</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>artifactory-pro</artifactoryName>
        <artifactoryUrl>https://test-artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/Release/PhoneListManager.exe&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        },
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/Release/PhoneListManager.pdb&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        },
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/PhoneListManager.rc&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.0.3">
      <template>#${BUILD_NUMBER}_Branch:${BRANCH}</template>
      <descriptionTemplate></descriptionTemplate>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>