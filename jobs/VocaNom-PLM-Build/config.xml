<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Manual trigger.&#xd;
1. Create Tag.&#xd;
2. Build PLM.&#xd;
3. Upload outputs to artifactory.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.10"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.13">
      <gitLabConnection></gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description>Branch to build</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NEWTAG</name>
          <description>Leave empty by default in order to ++ the last tag
If you need to &quot;jump&quot; - please set the new number.
For example: current tag is 3.0.7.15  but the new should be 4.0.0.0</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/${BRANCH}:refs/remotes/origin/${BRANCH}</refspec>
        <url>ssh://jenkins@test-gerrit:29418/VocaNom/PLM.git</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <assignedNode>VocaNOM</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>C:\jenkinsslave\workspace\VocaNom\PLM</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!C:\cygwin64\bin\bash.exe --login -i

cd ${WORKSPACE}

id

git tag -d ${NEWTAG}

git fetch origin --tags || exit 1

COMMHASH=$(git log -1 --oneline | gawk &apos;{print $1}&apos;)

## If no tag specified for build, get last tag from test-gerrit and increment it by 1 to set new version and new tag
## Else use given tag as new tag and also make new version from it.
## The version value has two forms:
## x,x,x,x which is reprsented by *_VER
## &quot;x, x, x, x&quot; which is represented by *_V_E_R
if [ -z &quot;$NEWTAG&quot; ]; then
    # get sorted tags of current commit
    headTags=$(git tag --points-at HEAD --sort=-taggerdate)
    # Get last tags on the branch
    parentTags=$(git describe --tags --abbrev=0 --first-parent origin/${BRANCH} 2&gt;/dev/null)
    # Sort last tags on the branch
    [[ -z &quot;$parentTags&quot; ]] || parentSortedTags=$(git tag --points-at $(git rev-list -n1 $parentTags) --sort=-taggerdate)
    
    ## If current commit has the last tag on the branch - exit
    if [[ &quot;$headTags&quot; == &quot;$parentSortedTags&quot; ]]; then
        echo &quot;Current commit has the last tag on the branch. Exiting!&quot; &amp;&amp; exit 1
    fi
    
    ## Get or Set last tag value
    [[ &quot;$parentSortedTags&quot; != &quot;&quot; ]] &amp;&amp; LASTTAG=$(echo $parentSortedTags | head -1) || LASTTAG=&quot;0.0.0.0&quot;
    
    echo $LASTTAG
    
    # Disassemble tag
    LASTMAJ=$(echo $LASTTAG | gawk -F. &apos;{print $1}&apos;)
    LASTMID=$(echo $LASTTAG | gawk -F. &apos;{print $2}&apos;)
    LASTMIN=$(echo $LASTTAG | gawk -F. &apos;{print $3}&apos;)
    LASTPCH=$(echo $LASTTAG | gawk -F. &apos;{print $4}&apos;)
    
    # Increment last field
    NEW_PCH=$(( LASTPCH+1 ))
    
    # Construct new values
    NEWTAG=&quot;$LASTMAJ.$LASTMID.$LASTMIN.$NEW_PCH&quot;
    NEW_VER=&quot;$LASTMAJ,$LASTMID,$LASTMIN,$NEW_PCH&quot;
    NEW_V_E_R=&quot;$LASTMAJ, $LASTMID, $LASTMIN, $NEW_PCH&quot;
    
    TAGMSG=&quot;Tagged commit $COMMHASH with tag $NEWTAG incremented from last tag in git&quot;
else
    # Construct new values
    NEW_VER=$(echo $NEWTAG | sed &apos;s/\./,/g&apos;)
    NEW_V_E_R=$(echo $NEWTAG | sed &apos;s/\./, /g&apos;)
    
    TAGMSG=&quot;Tagged commit $COMMHASH with tag $NEWTAG provided by user&quot;
fi

## Tag current commit with NEWTAG
git tag -a -m &quot;$TAGMSG&quot; $NEWTAG
git push origin $NEWTAG

## Embed new version inside c# assembly file.
## For easy reading, this was split into two commands.
cd PhoneListManager
sed -E -i &apos;s:^( *FILEVERSION| *PRODUCTVERSION).*$:\1 &apos;&quot;$NEW_VER&quot;&apos;:g&apos; PhoneListManager.rc
sed -E -i &apos;s:^( *VALUE &quot;FileVersion&quot;,| *VALUE &quot;ProductVersion&quot;,).*$:\1 \&quot;&apos;&quot;$NEW_V_E_R&quot;&apos;\&quot;:g&apos; PhoneListManager.rc

cd ${WORKSPACE}
echo &quot;setx NEWTAG $NEWTAG&quot; &gt; envVars.bat
echo &quot;set NEWTAG=$NEWTAG&quot; &gt;&gt; envVars.bat


## Prepare Release Notes data
DATE=`date`
RN=&quot;&quot;
while read -r hash; do
  if [ &quot;$hash&quot; != &quot;&quot; ]; then
    subject=$(git log --pretty=format:&quot;%s&quot; $hash -n1 | sed &apos;s/\&quot;/`/g; s/---/_/g; s/::/;/g&apos;)
    VI=$(git log --pretty=format:&quot;%B&quot; $hash -n1 | grep Issue | sed &apos;s/.*: \(VI\|\)//gi; s/ .*//g&apos;)
    RN+=---$subject::$hash::$VI
  fi
done &lt;&lt;&lt; &quot;$(git log --first-parent --reverse --pretty=format:&quot;%h&quot; $LASTTAG..HEAD)&quot;
EMAIL=`git log --pretty=format:&quot;%ae%n%ce&quot; $LASTTAG..HEAD | sort -u`
echo NEWTAG=${NEWTAG} &gt; voiceAI.properties
echo RN=${RN} &gt;&gt; voiceAI.properties
echo GERRIT_HOST=$(echo $GIT_URL | cut -d@ -f2 | cut -d: -f1) &gt;&gt; voiceAI.properties
echo EMAIL=${EMAIL} &gt;&gt; voiceAI.properties
echo GERRIT_BRANCH=$BRANCH&gt;&gt; voiceAI.properties
echo PROJECT=`git config --get remote.origin.url | sed &apos;s:.*29418/::&apos;` &gt;&gt; voiceAI.properties
echo DATE=${DATE} &gt;&gt; voiceAI.properties
echo AuthorCommitter=${AuthorCommitter} &gt;&gt; voiceAI.properties
echo folder_name=${folder_name} &gt;&gt; voiceAI.properties
echo Coverage_Summary=${Coverage_Summary} &gt;&gt; voiceAI.properties
echo CALLER_URL=${JOB_URL} &gt;&gt; voiceAI.properties
echo &quot;***** Parameters for next steps: *****&quot;
cat voiceAI.properties</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.6">
      <info>
        <propertiesFilePath>voiceAI.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.BatchFile>
      <command>call envVars.bat&#xd;
&#xd;
cd PhoneListManager&#xd;
%comspec% /k go.bat&#xd;
&#xd;
cd ..&#xd;
del envVars.bat</command>
    </hudson.tasks.BatchFile>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition">
          <arg1>0 Error(s)</arg1>
          <arg2></arg2>
          <ignoreCase>false</ignoreCase>
        </condition>
      </condition>
      <buildStep class="hudson.plugins.powershell.PowerShell" plugin="powershell@1.3">
        <command>exit 1</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>PhoneListManager\PhoneListManager.rc</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters>
              <propertiesFile>voiceAI.properties</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <projects>Update-Jira</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.5.0">
      <deployerDetails>
        <artifactoryName>artifactory2-pro</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>artifactory-pro</artifactoryName>
        <artifactoryUrl>https://test-artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/Release/PhoneListManager.exe&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        },
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/Release/PhoneListManager.pdb&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        },
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/PhoneListManager/PhoneListManager.rc&quot;,
            &quot;target&quot;: &quot;VocaNom/PLM/${NEWTAG}/&quot;
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.0.3">
      <template>#${BUILD_NUMBER}_${NEWTAG}</template>
      <descriptionTemplate></descriptionTemplate>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>