<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>10</daysToKeep>
        <numToKeep>100</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAGNAME</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPOSITORY</name>
          <description></description>
          <defaultValue>sbc-release</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>copy2netapp</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
artifactory=&quot;https://test-artifactory&quot;
User=&quot;$artifactory_user:$artifactory_password&quot;
Branch=$GERRIT_BRANCH

if [ &quot;$REPOSITORY&quot; == &quot;sbc-release&quot; ]; then 
  location=&quot;$REPOSITORY/com/ac/sbc/$Branch/Firmware&quot;
  Firmware=&quot;$Branch Release/Firmware&quot;
  if (( $(echo $Branch | cut -d. -f3) % 10 != 0 )); then
    Firmware=&quot;$(echo $Branch | sed &apos;s/_fix//; s/.$/0/; s:\.160:\.150:&apos;) Release/$Branch&quot;
  fi
elif [ &quot;$REPOSITORY&quot; == &quot;MP20x&quot; ]; then
  location=&quot;$REPOSITORY/com/ac/MP/$Branch&quot;
else
  echo No valid repository... exit
  exit 1
fi

if [ &quot;$TAGNAME&quot; == &quot;&quot; ]; then
  NEWTAG=`curl -k -s -u $User -X GET $artifactory/api/storage/$location | grep uri | grep -v artifactory | sort -r  | head -1 | cut -d&apos;&quot;&apos; -f4 | cut -c 2-`
else
  NEWTAG=$TAGNAME
fi

if [ &quot;$REPOSITORY&quot; == &quot;sbc-release&quot; ]; then 
  Target=&quot;/netapp1/CompilationResults/$Firmware/F$NEWTAG&quot;
elif [ &quot;$REPOSITORY&quot; == &quot;MP20x&quot; ]; then
  # Rakefet ask from $Branch/$NEWTAG To $Branch/${Branch}_$NEWTAG
  Target=&quot;/netapp1/CompilationResults/MP20x/$Branch/${Branch}_$NEWTAG&quot;
fi

if ! [ -d &quot;$Target&quot; ]; then
  mkdir -p &quot;$Target&quot;
fi

curl -k -s -u $User -X GET $artifactory/api/storage/$location/$NEWTAG | grep uri | cut -d&apos;&quot;&apos; -f4 | cut -c 2- &gt; $NEWTAG.list
if [ -s &quot;$NEWTAG.list&quot; ]; then
   while read -r FileName
   do
     Extention=`echo ${FileName##*.}`
     if [ $Extention == &quot;cmp&quot; ]; then
       BOARD=`echo $FileName | sed -r s/.cmp//`
       if [ -e &quot;$Target/$BOARD.zip&quot; ]; then continue; fi
       # if [[ &quot;$BOARD&quot; =~ &quot;Hosted&quot; ]]; then continue; fi
       echo Download $FileName into &quot;$Target/$FileName&quot;...
       curl -ks -u $User -X GET $artifactory/$location/$NEWTAG/$FileName --output &quot;$Target/$FileName&quot;
       echo Create Zip from $FileName...
       zip -mj &quot;$Target/$BOARD.zip&quot; &quot;$Target/$FileName&quot;
     elif [ $Extention == &quot;zip&quot; ] || [ $Extention == &quot;txt&quot; ] || [ $Extention == &quot;rms&quot; ]; then
       if [ -e &quot;$Target/$FileName&quot; ]; then continue; fi
       echo Download $FileName into &quot;$Target/$FileName&quot;...
       curl -ks -u $User -X GET $artifactory/$location/$NEWTAG/$FileName --output &quot;$Target/$FileName&quot;
     fi
   done &lt; &quot;$NEWTAG.list&quot;
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>yossim shuky.riechard</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun></regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>false</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>360</delay>
      </delay>
      <maxSchedule>2</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.34">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@2.1.5">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.42">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQC9Q9eeTsh0/7+AtlIDNhOldFHEwRntJsY/b1oiztPUQ=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}__${TAGNAME}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>