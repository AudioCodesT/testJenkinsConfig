<?xml version='1.1' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.14">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>10</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHANGES</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>true</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit>REFSPEC</paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.6">
      <info>
        <propertiesContent>ARTIFACTORY_HOST=artifactory
DEPENDENCIES_FOLDER=TrunkPackRam/TPApp/MPCBin
BRDVERSION=TrunkPackRam/Bsps/Common/Include/BrdVersion.h
PATH=/bin:$PATH</propertiesContent>
        <secureGroovyScript plugin="script-security@1.55">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>$REFSPEC</refspec>
        <url>ssh://jenkins@test-gerrit:29418/TP/GWApp</url>
        <credentialsId>fef9964a-ddb7-4ce6-a445-a99a9e9802c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$REFSPEC</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser" plugin="gerrit-trigger@2.27.5">
          <separator>#</separator>
        </buildChooser>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>false</shallow>
        <noTags>false</noTags>
        <reference>/gerrit_mnt/TP/GWApp.git</reference>
        <depth>0</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <assignedNode>sbc-mc-fathers</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>sbc-linux-build</string>
      </values>
    </hudson.matrix.LabelAxis>
    <hudson.matrix.TextAxis>
      <name>BOARDNAME</name>
      <values>
        <string>M1000_MSBG</string>
        <string>M4000</string>
        <string>MP500_ESBC</string>
        <string>MP500_MSBG</string>
        <string>HostedTP</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>artifactory_host=${ARTIFACTORY_HOST}
User=&quot;$artifactory_user:$artifactory_password&quot;

cd TrunkPackRam
NEWTAG=`./MakeBrdVersion.sh`
git describe --tags
git log -n10 --decorate --oneline
head -12 Bsps/Common/Include/BrdVersion.h | tail -3

echo BOARDNAME=${BOARDNAME} &gt; ../generated_sbc_version.properties

#if [[ $GERRIT_BRANCH =~ &quot;collab/&quot; ]]; then
#  GERRIT_BRANCH=`git branch -r --contains $(git describe --tag --abbrev=0) | head -1 | awk -F&apos;/&apos; &apos;{print $NF}&apos;`
#fi
echo GERRIT_BRANCH=${GERRIT_BRANCH} &gt;&gt; ../generated_sbc_version.properties

# if the REFSPEC=&lt;Branch name&gt;
# CHANGESNumbers = All the chnages that should be updated with DRT label
if [[ $REFSPEC == $GERRIT_BRANCH ]]; then
  FirstRefs=$(echo $CHANGES | cut -d&quot; &quot; -f1 | cut -d: -f3)
  REFSPEC=refs/changes/00/$FirstRefs
  CHANGESNumbers=&quot;&quot;
  OnlySubModule=true
  TARGET=${NEWTAG}-$(echo $FirstRefs | cut -d/ -f1)
else
  CHANGESNumbers=&quot;$(echo $REFSPEC | sed &apos;s:refs/changes/../::&apos;) &quot;
  OnlySubModule=false
  TARGET=${NEWTAG}-$(echo $REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;)
fi

# Find if this build should use another Opensorce Images with the same Commit change-ID
chmod 600 ../id_rsa_gerrit
change=`echo $REFSPEC | cut -d/ -f4`
ID=$(ssh -p 29418 -i ../id_rsa_gerrit jenkins@test-gerrit gerrit query $change | grep -m1 id: | cut -d: -f2 | sed &apos;s: ::g&apos;)
ls -l ../id_rsa_gerrit
chmod 600 ../id_rsa_gerrit
ssh -p 29418 -i ../id_rsa_gerrit jenkins@test-gerrit gerrit query --current-patch-set change:$ID branch:$GERRIT_BRANCH status:open | \
  grep -A30 &apos;project: TP/OpenSource&apos; | grep &apos;project\|revision&apos; &gt; othersCommits.txt  || echo ChangeId not found

cat othersCommits.txt

while IFS= read -r line; do
   if echo $line | grep -q project; then path=$(echo $line | cut -d: -f2 | sed &apos;s:TP/::; s: ::g&apos;);
   elif echo $line | grep -q revision; then
     revision=$(echo $line | cut -d: -f2)
     git ls-files --stage ../$path
     git update-index --cacheinfo 160000 $revision $path
     git ls-files --stage ../$path
   fi
done &lt; othersCommits.txt

if [[ $CHANGES != &quot;&quot; ]]; then 
  for rep in $CHANGES; do 
    path=$(echo $rep | cut -d: -f1 | sed &apos;s:TP/::&apos;)
    revision=$(echo $rep | cut -d: -f2)
    echo update $path to revision $revision
    git update-index --cacheinfo 160000 $revision $path
    CHANGESNumbers=&quot;$CHANGESNumbers$(echo $rep | cut -d: -f3) &quot;
    # Add to the Target name directory the first and last chars of each submodule and PS
    # Example, for OpenRG: _OG&lt;PatchSet number&gt;
    TARGET=${TARGET}_$(echo $path | awk -F/ &apos;{print $NF}&apos; | sed &apos;s/.//2g&apos;)$(echo ${path: -1})$(echo ${rep: -1})
  done
fi

echo Tatget directory is: $TARGET
echo TARGET=${TARGET} &gt;&gt; ../generated_sbc_version.properties
echo REFSPEC=${REFSPEC} &gt;&gt; ../generated_sbc_version.properties

# Remove old external files before downloading from Artifactory
rm -f TPApp/MPCBin/*external_version_data.h

echo CHANGESNumbers=${CHANGESNumbers} &gt;&gt; ../generated_sbc_version.properties
# Download the Images from the Artifactory
if [ ! -e GetImages.sh ]; then  curl -ks https://test-gerrit/static/GetImages.sh --output GetImages.sh; fi
chmod +x GetImages.sh
./GetImages.sh $BOARDNAME $artifactory_host $User &quot;&quot; &quot;-i ../id_rsa_gerrit jenkins@test-gerrit&quot;

# Take the relevant TP/GWApp that corresponding to this Submodule change instead of using the branch
# In case of no TP/GWApp change was added to this DRT
if [ &quot;$OnlySubModule&quot; == true ]; then
  tagTocompile=&quot;&quot;
  for rep in $CHANGES; do 
    RepoName=$(echo $rep | cut -d: -f1 | sed &apos;s:.*/::&apos;) 
    echo Check $RepoName............ Search it $BOARDNAME.deps 
    # $f will contain the the exact external_version_data.h name according the .deps file
    f=$(grep &quot;/$RepoName &quot; ../OpenSource/$BOARDNAME.deps | grep data.h | sed &apos;s:.* ::&apos; || echo Not found)
    # The file exist?
    if [ -f TPApp/MPCBin/$f ]; then
      t1=$(grep EXTERNAL_VERSION TPApp/MPCBin/$f | cut -d&apos;&quot;&apos; -f2 | cut -d- -f1 | cut -d_ -f1)
      echo Found TAG $t1 in file $f -- Check if this TAG is the most advanced TAG
      # This if is relevant if OpenRG and acLinux or Hosted02 and Hostedbl were choosen
      if [ $(echo 0$t1 | sed &apos;s:.*\.::&apos;) -gt $(echo 0$tagTocompile | sed &apos;s:.*\.::&apos;) ]; then
        tagTocompile=$t1
        echo Change to TAG: $tagTocompile found in Submodule $RepoName
      fi    
    fi
  done
  if [ ! -z &quot;$tagTocompile&quot; ]; then
    #echo Do not nothing, need to involve the QA (Rekefet) if it is right to do it
    echo Checkout TP/GWApp compilation environment to $tagTocompile
    #git checkout -f $tagTocompile
    #NEWTAG=`./MakeBrdVersion.sh`
  fi   
fi

cd ..
sudo chmod -R 755 .
sudo chown -R centos:centos .
cd TrunkPackRam

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.6">
      <info>
        <propertiesFilePath>generated_sbc_version.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>artifactory_host=${ARTIFACTORY_HOST}
User=&quot;$artifactory_user:$artifactory_password&quot;

if [ ! -d &quot;$WORKSPACE/CompilationResults&quot; ]; then
  rm -rf $WORKSPACE/CompilationResults
fi

if curl -ks -u $User https://$artifactory_host/api/storage/sbc-review/com/ac/sbc/DRT/Firmware/${TARGET}/${BOARDNAME}_SIP.cmp | grep -q uri
then 
	echo ${TARGET}/${BOARDNAME}_SIP.cmp exist already!... Abort without error;
    exit 0
fi

cd TrunkPackRam

if [ $BOARDNAME == &quot;HostedTP&quot; ]; then SERVER=&quot;--server=localhost &quot;; else SERVER=&quot;&quot;; fi
./buildAll.sh --board=${BOARDNAME} --sip=yes --user=no --fast=yes $SERVER --custom-version=-d$BUILD_NUMBER

cd ${WORKSPACE}/CompilationResults/ram${BOARDNAME}_SIP/TPApp/MPCBin
mv ram${BOARDNAME}_SIP.cmp ${BOARDNAME}_SIP.cmp

zip -r ${BOARDNAME}_SIP.map.zip ram${BOARDNAME}_SIP.map
zip -r ${BOARDNAME}_SIP.elf.zip ram${BOARDNAME}_SIP.elf
</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>^(?!collab).*</expression>
        <label>$GERRIT_BRANCH</label>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.35.2">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>REFSPEC=${REFSPEC}
GERRIT_BRANCH=${GERRIT_BRANCH}
EMAIL=${EMAIL}
BOARD=${BOARDNAME}_SIP.cmp
REFTARGET=${TARGET}
CHANGES=${CHANGESNumbers}</properties>
                <textParamValueOnNewLine>false</textParamValueOnNewLine>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>sbc-drt-copy-to-netapp1</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>wait for dependent artifact</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>true</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestChildrenRetriggerMatched</regexpForMatrixStrategy>
      <noChildStrategy>RerunWhole</noChildStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>600</delay>
      </delay>
      <maxSchedule>3</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
            <worstResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </worstResult>
            <bestResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.5.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>FAILURE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <EnvInjectBuilder plugin="envinject@2.1.6">
                        <info>
                          <propertiesFilePath>generated_sbc_version.properties</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                      <hudson.tasks.Shell>
                        <command>echo POST action: FAILED board ${BOARDNAME}_SIP.cmp
echo CHANGES: $CHANGESNumbers
for rep in $CHANGESNumbers; do

  change=`echo $rep | cut -d/ -f1`
  ps=`echo $rep | cut -d/ -f2`
  chmod 600 id_rsa_gerrit
  
  echo Send faild message to Gerrit - $change,$ps
  ssh -p 29418  -i id_rsa_gerrit jenkins@test-gerrit gerrit review \
  --message &quot;&apos;Compilation Failed - $BUILD_URL&apos;&quot; \
  --notify OWNER \
  --label DRT=-1 \
  --tag &quot;&apos;autogenerated:drt&apos;&quot; \
  $change,$ps

done      
</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.4.3">
      <script plugin="script-security@1.55">
        <script>artfcty_pat = ~/Deploying artifact: https:\/\/(.+\/)([^\/\s]+\b)/

// Adds artifacts from child build
def add_artifacts(artifacts, build) {
    // match &quot;Deploying artifact: (.+)&quot;
    def matches = build.logFile.text =~ artfcty_pat
    matches.each {
        if (!it[2].endsWith(&apos;.h&apos;)) // Ignore header files
            artifacts.appendText(&quot;&lt;li&gt;&lt;a href=\&quot;https://sbc-read:sbc-read@${it[1]}${it[2]}\&quot;&gt;${it[2]}&lt;/a&gt;&lt;/li&gt;&quot;, false)
    }
}

def isMatrix = manager.buildIsA(hudson.matrix.MatrixBuild.class)
artifacts = manager.createSummary(&quot;package.png&quot;)
targetArtifactory=&quot;user/Firmware/&quot; + manager.build.number
artifacts.appendText(&quot;&lt;a href=\&quot;https://sbc-read:sbc-read@artifactory/webapp/#/artifacts/browse/tree/General/sbc-review/com/ac/sbc/&quot; + targetArtifactory + &quot;\&quot;&gt;Build Artifacts:&lt;/a&gt;&lt;ul&gt;&quot;, false)
// For matrix build, collect artifacts from all child builds. For normal build collect from self
if (isMatrix) {
    manager.build.exactRuns.each { run -&gt; add_artifacts(artifacts, run) }
} else {
    add_artifacts(artifacts, manager.build);
}
artifacts.appendText(&quot;&lt;/ul&gt;&quot;, false)
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>true</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>60</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortAndRestartOperation>
          <maxRestarts>1</maxRestarts>
        </hudson.plugins.build__timeout.operations.AbortAndRestartOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper plugin="copy-to-slave@1.4.4">
      <includes>id_rsa_gerrit</includes>
      <excludes></excludes>
      <flatten>false</flatten>
      <includeAntExcludes>false</includeAntExcludes>
      <hudsonHomeRelative>false</hudsonHomeRelative>
      <relativeTo>userContent</relativeTo>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script>if [[ $CHANGES != &quot;&quot; ]]; then
  for rep in $CHANGES; do
    revisions=$(echo $rep | cut -d: -f3 | sed &apos;s:/:/revisions/:&apos;)
    curl -kns --anyauth -X POST https://test-gerrit/a/changes/$revisions/review \
    -d &quot;{\&quot;message\&quot;: \&quot;DRT compilation has started - $BUILD_URL\&quot;, \&quot;notify\&quot;: \&quot;NONE\&quot;, \&quot;tag\&quot;: \&quot;autogenerated:drt\&quot;}&quot; \
    -H &apos;Content-Type: application/json&apos; &gt; /dev/null
  done
fi

if [[ $REFSPEC != $GERRIT_BRANCH ]]; then
  revisions=$(echo $REFSPEC | cut -d/ -f4,5 | sed &apos;s:/:/revisions/:&apos;)
  curl -kns --anyauth -X POST https://test-gerrit/a/changes/$revisions/review \
  -d &quot;{\&quot;message\&quot;: \&quot;DRT compilation has started - $BUILD_URL\&quot;, \&quot;notify\&quot;: \&quot;NONE\&quot;, \&quot;tag\&quot;: \&quot;autogenerated:drt\&quot;}&quot; \
  -H &apos;Content-Type: application/json&apos; &gt; /dev/null
fi
</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>true</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>artifactory2-pro</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>sbc-review</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>artifactory2-pro</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>false</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/CompilationResults/ram${BOARDNAME}_SIP/TPApp/MPCBin/${BOARDNAME}_SIP.cmp=&gt;com/ac/sbc/DRT/Firmware/${TARGET}
${WORKSPACE}/CompilationResults/ram${BOARDNAME}_SIP/TPApp/MPCBin/${BOARDNAME}_SIP.*.zip=&gt;com/ac/sbc/DRT/Firmware/${TARGET}/map</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>true</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <artifactoryCombinationFilter>label==&quot;sbc-linux-build&quot;</artifactoryCombinationFilter>
      <multiConfProject>true</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@2.1.6">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.55">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.6">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQC9Q9eeTsh0/7+AtlIDNhOldFHEwRntJsY/b1oiztPUQ=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} ${REFSPEC}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>/home/centos/jenkinsslave/workspace/TP_GWApp</childCustomWorkspace>
</matrix-project>